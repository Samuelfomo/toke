{
  "name": "@toke/api",
  "version": "1.0.0",
  "main": "index.js",
  "type": "module",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1",
    "testCreateClient": "tsx scripts/manageClient.ts",
    "testCreateProfile": "tsx scripts/manageProfile.ts",
    "testTokens": "tsx scripts/testTokenGeneration.ts",
    "clean": "rimraf dist server.pid logs/*.log 2>/dev/null || true",
    "build": "npm run clean && tsc",
    "build:check": "node -e \"console.log('✅ Build vérifié')\" dist/server.js --version",
    "dev": "tsx src/server.ts",
    "dev:watch": "tsx watch --clear-screen=false src/server.ts",
    "start": "node dist/server.js",
    "start:dev": "NODE_ENV=development npm run start",
    "start:prod": "NODE_ENV=production npm run start",
    "restart": "npm run stop && sleep 3 && npm run start",
    "restartDev": "npm run stop && sleep 3 && npm run start:dev",
    "startAuto": "npm run build && pm2 start ecosystem.config.cjs --env production",
    "startAutoDev": "npm run build && pm2 start ecosystem.config.cjs --env development",
    "restartAuto": "npm run build && pm2 restart ecosystem.config.cjs --env production",
    "reloadAuto": "pm2 reload api",
    "stopAuto": "pm2 stop api",
    "logsAuto": "pm2 logs api",
    "verifyStartApp": "pm2 list",
    "format": "prettier --write .",
    "lint": "eslint . --ext .ts,.tsx",
    "lint:fix": "eslint . --ext .ts,.tsx --fix",
    "lint:check": "eslint . --ext .ts,.tsx --max-warnings 0",
    "logs": "tail -f logs/app.log 2>/dev/null || echo 'Pas de fichier de log'",
    "logs:tail": "tail -f ./logs/combined.log",
    "logs:error": "tail -f ./logs/err.log",
    "logs:clear": "pm2 flush api",
    "redisTest": "tsx scripts/manageUserAuth.ts",
    "testCountry": "tsx scripts/countryManager.ts",
    "testCurrency": "tsx scripts/currencyManager.ts",
    "testCountryAuto": "tsx scripts/test.ts",
    "prod": "npm run build && NODE_ENV=production npm run start",
    "prod:bg": "npm run build && NODE_ENV=production nohup npm run start > logs/app.log 2>&1 &",
    "stop": "node scripts/stop.js",
    "kill": "node scripts/kill.js",
    "status": "node scripts/status.js",
    "nuclear-cleanup": "node scripts/nuclear-cleanup.js",
    "genkey": "node -e \"console.log(require('crypto').randomBytes(32).toString('hex'))\"",
    "migrate": "npx sequelize-cli db:migrate --env production",
    "migrate:dev": "npx sequelize-cli db:migrate --env development",
    "migrate:undo": "npx sequelize-cli db:migrate:undo:all --env production",
    "status:migrate": "npx sequelize-cli db:migrate:status --env production",
    "migration:create": "npx sequelize-cli migration:create",
    "migration:generate": "npx sequelize-cli migration:generate"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "description": "",
  "devDependencies": {
    "@toke/shared": "file:../shared",
    "@types/bcrypt": "^6.0.0",
    "@types/cors": "^2.8.19",
    "@types/dotenv": "^6.1.1",
    "@types/express": "^5.0.3",
    "@types/multer": "^2.0.0",
    "@types/node": "^24.0.0",
    "@typescript-eslint/eslint-plugin": "^8.40.0",
    "@typescript-eslint/parser": "^8.40.0",
    "eslint": "^9.33.0",
    "eslint-config-prettier": "^10.1.5",
    "eslint-plugin-import": "^2.32.0",
    "eslint-plugin-unused-imports": "^4.2.0",
    "prettier": "^3.6.2",
    "rimraf": "^6.0.1",
    "typescript": "^5.9.2"
  },
  "dependencies": {
    "@types/nodemailer": "^6.4.17",
    "bcrypt": "^6.0.0",
    "cors": "^2.8.5",
    "dotenv": "^16.6.1",
    "express": "^5.1.0",
    "express-jwt": "^8.5.1",
    "ioredis": "^5.6.1",
    "jsonwebtoken": "^9.0.2",
    "multer": "^2.0.2",
    "nodemailer": "^7.0.3",
    "pg": "^8.16.0",
    "pg-hstore": "^2.3.4",
    "sequelize": "^6.37.7",
    "ts-node": "^10.9.2",
    "uuid": "^11.1.0"
  }
}